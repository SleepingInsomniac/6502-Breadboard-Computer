class CPU65c02
  INSTRUCTIONS = {
                                                                                           #  7  6  5  4  3  2  1  0
                                                                                           #  N  V  1  1  D  I  Z  C
    'ADC' =>  { desc: 'ADd memory to accumulator with Carry',                       status: " N, V,  ,  ,  ,  , Z, C"  },
    'AND' =>  { desc: '"AND" memory with accumulator',                              status: " N,  ,  ,  ,  ,  , Z,  "  },
    'ASL' =>  { desc: 'Arithmetic Shift one bit Left, memory or accumulator',       status: " N,  ,  ,  ,  ,  , Z, C"  },
    'BBR' =>  { desc: 'Branch on Bit Reset',                                        status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'BBS' =>  { desc: 'Branch of Bit Set',                                          status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'BCC' =>  { desc: 'Branch on Carry Clear (Pc=0)',                               status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'BCS' =>  { desc: 'Branch on Carry Set (Pc=1)',                                 status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'BEQ' =>  { desc: 'Branch if EQual (Pz=1)',                                     status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'BIT' =>  { desc: 'BIt Test',                                                   status: "m7,m6,  ,  ,  ,  , Z,  "  },
    'BMI' =>  { desc: 'Branch if result MInus (Pn=1)',                              status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'BNE' =>  { desc: 'Branch if Not Equal (Pz=0)',                                 status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'BPL' =>  { desc: 'Branch if result PLus (Pn=0)',                               status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'BRA' =>  { desc: 'BRanch Always',                                              status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'BRK' =>  { desc: 'BReaK instruction',                                          status: "  ,  ,  , 1, 0, 1,  ,  "  },
    'BVC' =>  { desc: 'Branch on oVerflow Clear (Pv=0)',                            status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'BVS' =>  { desc: 'Branch on oVerflow Set (Pv=1)',                              status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'CLC' =>  { desc: 'CLear Cary flag',                                            status: "  ,  ,  ,  ,  ,  ,  , 0"  },
    'CLD' =>  { desc: 'CLear Decimal mode',                                         status: "  ,  ,  ,  , 0,  ,  ,  "  },
    'CLI' =>  { desc: 'CLear Interrupt disable bit',                                status: "  ,  ,  ,  ,  , 0,  ,  "  },
    'CLV' =>  { desc: 'CLear oVerflow flag',                                        status: "  , 0,  ,  ,  ,  ,  ,  "  },
    'CMP' =>  { desc: 'CoMPare memory and accumulator',                             status: " N,  ,  ,  ,  ,  , Z, C"  },
    'CPX' =>  { desc: 'ComPare memory and X register',                              status: " N,  ,  ,  ,  ,  , Z, C"  },
    'CPY' =>  { desc: 'ComPare memory and Y register',                              status: " N,  ,  ,  ,  ,  , Z, C"  },
    'DEC' =>  { desc: 'DECrement memory or accumulate by one',                      status: " N,  ,  ,  ,  ,  , Z,  "  },
    'DEX' =>  { desc: 'DEcrement X by one',                                         status: " N,  ,  ,  ,  ,  , Z,  "  },
    'DEY' =>  { desc: 'DEcrement Y by one',                                         status: " N,  ,  ,  ,  ,  , Z,  "  },
    'EOR' =>  { desc: '"Exclusive OR" memory with accumulate',                      status: " N,  ,  ,  ,  ,  , Z,  "  },
    'INC' =>  { desc: 'INCrement memory or accumulate by one',                      status: " N,  ,  ,  ,  ,  , Z,  "  },
    'INX' =>  { desc: 'INcrement X register by one',                                status: " N,  ,  ,  ,  ,  , Z,  "  },
    'INY' =>  { desc: 'INcrement Y register by one',                                status: " N,  ,  ,  ,  ,  , Z,  "  },
    'JMP' =>  { desc: 'JuMP to new location',                                       status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'JSR' =>  { desc: 'Jump to new location Saving Return (Jump to SubRoutine)',    status: " N,  ,  ,  ,  ,  , Z,  "  },
    'LDA' =>  { desc: 'LoaD Accumulator with memory',                               status: " N,  ,  ,  ,  ,  , Z,  "  },
    'LDX' =>  { desc: 'LoaD the X register with memory',                            status: " N,  ,  ,  ,  ,  , Z,  "  },
    'LDY' =>  { desc: 'LoaD the Y register with memory',                            status: " N,  ,  ,  ,  ,  , Z,  "  },
    'LSR' =>  { desc: 'Logical Shift one bit Right memory or accumulator',          status: " 0,  ,  ,  ,  ,  , Z, C"  },
    'NOP' =>  { desc: 'No OPeration',                                               status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'ORA' =>  { desc: '"OR" memory with Accumulator',                               status: " N,  ,  ,  ,  ,  , Z,  "  },
    'PHA' =>  { desc: 'PusH Accumulator on stack',                                  status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'PHP' =>  { desc: 'PusH Processor status on stack',                             status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'PHX' =>  { desc: 'PusH X register on stack',                                   status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'PHY' =>  { desc: 'PusH Y register on stack',                                   status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'PLA' =>  { desc: 'PuLl Accumulator from stack',                                status: " N,  ,  ,  ,  ,  , Z,  "  },
    'PLP' =>  { desc: 'PuLl Processor status from stack',                           status: " N, V,  , 1, D, I, Z, C"  },
    'PLX' =>  { desc: 'PuLl X register from stack',                                 status: " N,  ,  ,  ,  ,  , Z,  "  },
    'PLY' =>  { desc: 'PuLl Y register from stack',                                 status: " N,  ,  ,  ,  ,  , Z,  "  },
    'RMB' =>  { desc: 'Reset Memory Bit',                                           status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'ROL' =>  { desc: 'ROtate one bit Left memory or accumulator',                  status: " N,  ,  ,  ,  ,  , Z, C"  },
    'ROR' =>  { desc: 'ROtate one bit Right memory or accumulator',                 status: " N,  ,  ,  ,  ,  , Z, C"  },
    'RTI' =>  { desc: 'ReTurn from Interrupt',                                      status: " N, V,  , 1, D, I, Z, C"  },
    'RTS' =>  { desc: 'ReTurn from Subroutine',                                     status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'SBC' =>  { desc: 'SuBtract memory from accumulator with borrow (Carry bit)',   status: " N, V,  ,  ,  ,  , Z, C"  },
    'SEC' =>  { desc: 'SEt Carry',                                                  status: "  ,  ,  ,  ,  ,  ,  , 1"  },
    'SED' =>  { desc: 'SEt Decimal mode',                                           status: "  ,  ,  ,  , 1,  ,  ,  "  },
    'SEI' =>  { desc: 'SEt Interrupt disable status',                               status: "  ,  ,  ,  ,  , 1,  ,  "  },
    'SMB' =>  { desc: 'Set Memory Bit',                                             status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'STA' =>  { desc: 'STore Accumulator in memory',                                status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'STP' =>  { desc: 'SToP mode',                                                  status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'STX' =>  { desc: 'STore the X register in memory',                             status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'STY' =>  { desc: 'STore the Y register in memory',                             status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'STZ' =>  { desc: 'STore Zero in memory',                                       status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'TAX' =>  { desc: 'Transfer the Accumulator to the X register',                 status: " N,  ,  ,  ,  ,  , Z,  "  },
    'TAY' =>  { desc: 'Transfer the Accumulator to the Y register',                 status: " N,  ,  ,  ,  ,  , Z,  "  },
    'TRB' =>  { desc: 'Test and Reset memory Bit',                                  status: "  ,  ,  ,  ,  ,  , Z,  "  },
    'TSB' =>  { desc: 'Test and Set memory Bit',                                    status: "  ,  ,  ,  ,  ,  , Z,  "  },
    'TSX' =>  { desc: 'Transfer the Stack pointer to the X register',               status: " N,  ,  ,  ,  ,  , Z,  "  },
    'TXA' =>  { desc: 'Transfer the X register to the Accumulator',                 status: " N,  ,  ,  ,  ,  , Z,  "  },
    'TXS' =>  { desc: 'Transfer the X register to the Stack pointer register',      status: "  ,  ,  ,  ,  ,  ,  ,  "  },
    'TYA' =>  { desc: 'Transfer Y register to the Accumulator',                     status: " N,  ,  ,  ,  ,  , Z,  "  },
    'WAI' =>  { desc: 'WAit for Interrupt',                                         status: "  ,  ,  ,  ,  ,  ,  ,  "  },
  }
end
